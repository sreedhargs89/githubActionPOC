name: PR HCPCM Validator

on:
  pull_request:
    types:
      - opened

jobs:
  check-ticket:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Check for Specific File Changes
        id: check-file-changes
        run: |
          # Add the paths of the files you want to check
          if git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E 'ignore2.txt|ignore1.txt'; then
            echo "::set-output name=specific-files-changed::true"
          else
            echo "::set-output name=specific-files-changed::false"
          fi

      - name: Extract HCPCM Ticket Number from PR Title or Description
        id: extract-ticket
        if: steps.check-file-changes.outputs.specific-files-changed == 'false'
        run: |
          pattern="HCPCM-[0-9]+"
          title_match=$(grep -oE "$pattern" <<< "${{ github.event.pull_request.title }}") || true
          description_match=$(grep -oE "$pattern" <<< "${{ github.event.pull_request.body }}") || true
      
          extracted_ticket=""
          if [ -n "$title_match" ]; then
            extracted_ticket="$title_match"
          elif [ -n "$description_match" ]; then
            extracted_ticket="$description_match"
          fi

          echo "::set-output name=extracted-ticket::$extracted_ticket"

      - name: Add Comment Based on Extracted Ticket
        if: steps.check-file-changes.outputs.specific-files-changed == 'false'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          if [ -n "${{ steps.extract-ticket.outputs.extracted-ticket }}" ]; then
            COMMENT_BODY="Thank you for mentioning ticket ${{ steps.extract-ticket.outputs.extracted-ticket }}!"
          else
            COMMENT_BODY="Please include a valid HCPCM ticket number in the PR title. Ex: [HCPCM-***] Meaningful PR title"
          fi
          curl -X POST -H "Authorization: Bearer $GITHUB_TOKEN" \
               -H "Content-Type: application/json" \
               -d "{\"body\": \"$COMMENT_BODY\"}" \
               "https://api.github.com/repos/${{ github.repository }}/issues/$PR_NUMBER/comments"
